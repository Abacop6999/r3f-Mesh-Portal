/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.12 public/models/Birb.gltf -o src/components/Birb.jsx -r public
*/

import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";

export function Birb({ hovered, ...props }) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/models/Birb.gltf");
  const { actions } = useAnimations(animations, group);

  console.log(actions);

  useEffect(() => {
    const anim = hovered ? "Wave" : "Idle";
    actions[anim].reset().fadeIn(0.5).play();
    return () => actions[anim].fadeOut(0.5);
  }, [hovered]);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="CharacterArmature">
          <primitive object={nodes.Root} />
          <group name="Birb">
            <skinnedMesh
              name="Cube183"
              geometry={nodes.Cube183.geometry}
              material={materials.Birb_Main}
              skeleton={nodes.Cube183.skeleton}
            />
            <skinnedMesh
              name="Cube183_1"
              geometry={nodes.Cube183_1.geometry}
              material={materials.Birb_Secondary}
              skeleton={nodes.Cube183_1.skeleton}
            />
            <skinnedMesh
              name="Cube183_2"
              geometry={nodes.Cube183_2.geometry}
              material={materials.Birb_Beak}
              skeleton={nodes.Cube183_2.skeleton}
            />
            <skinnedMesh
              name="Cube183_3"
              geometry={nodes.Cube183_3.geometry}
              material={materials.Eye_White}
              skeleton={nodes.Cube183_3.skeleton}
            />
            <skinnedMesh
              name="Cube183_4"
              geometry={nodes.Cube183_4.geometry}
              material={materials.Eye_Black}
              skeleton={nodes.Cube183_4.skeleton}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/Birb.gltf");
